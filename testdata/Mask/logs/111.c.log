file:111.c
TRY TIME: 0
[(105, 179, 0)]
[(105, 179, 0)]
[(105, 179, 0)]
[(105, 179, 0)]
Loop 0 : Outer
Sorted indices: [0]
File not found: ../sac_c_parser/test/../ip_postcond/goal/111_goal.v. No file to delete.
File not found: ../sac_c_parser/test/../ip_postcond/goal/111_proof_auto.v. No file to delete.
File not found: ../sac_c_parser/test/../ip_postcond/goal/111_proof_manual.v. No file to delete.
LoopEntry_0:
(sn == 0) * (i == 1) * (n == n@pre)

[(0, '(sn == 0) * (i == 1) * (n == n@pre)')]
Successfully generated loop/111.json
INNER_FLAG: False
Variable Maps: [{'sn': '0', 'i': '1', 'n': 'n@pre'}]
Path conditions: [None]
Pre condition: (sn == 0) * (i == 1) * (n == n@pre)
Loop Condition: i <= n
Updated Loop Conditions: ['1 <= n@pre']
Global Unchanged Variables ['n']
Non Inductive Variables []
[{'sn': '0', 'i': '1', 'n': 'n@pre'}]
[None]

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant n == \at(n, Pre);
                */
                while (i <= n) {
      
      i  = (i + 1);
      sn  = (sn + 1);
  
    }
                

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (1 <= \at(n, Pre)) ==> (PLACE_HOLDER_i);
          loop invariant (1 <= \at(n, Pre)) ==> (PLACE_HOLDER_sn);
          loop invariant (!(1 <= \at(n, Pre))) ==> ((sn == 0)&&(i == 1)&&(n == \at(n, Pre)));
          loop invariant n == \at(n, Pre);
                */
                while (i <= n) {
      
      i  = (i + 1);
      sn  = (sn + 1);
  
    }
                
/*@ requires n >= 1;
*/
void foo(int n) {

    int i = 1;
    int sn = 0;
    
    
    
                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (1 <= \at(n, Pre)) ==> (PLACE_HOLDER_i);
          loop invariant (1 <= \at(n, Pre)) ==> (PLACE_HOLDER_sn);
          loop invariant (!(1 <= \at(n, Pre))) ==> ((sn == 0)&&(i == 1)&&(n == \at(n, Pre)));
          loop invariant n == \at(n, Pre);
                */
                while (i <= n) {
      
      i  = (i + 1);
      sn  = (sn + 1);
  
    }
                
    
    /*_auto_mask_id_0_*/
  
  }
```c
/*@ requires n >= 1;
*/
void foo(int n) {
    int i = 1;
    int sn = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
        loop invariant (1 <= \at(n, Pre)) ==> (1 <= i <= n + 1);
        loop invariant (1 <= \at(n, Pre)) ==> (sn == i - 1);
        loop invariant (!(1 <= \at(n, Pre))) ==> ((sn == 0) && (i == 1) && (n == \at(n, Pre)));
        loop invariant n == \at(n, Pre);
    */
    while (i <= n) {
        i = (i + 1);
        sn = (sn + 1);
    }
}
```

/*@ requires n >= 1;
*/
void foo(int n) {
    int i = 1;
    int sn = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
        loop invariant (1 <= \at(n, Pre)) ==> (1 <= i <= n + 1);
        loop invariant (1 <= \at(n, Pre)) ==> (sn == i - 1);
        loop invariant (!(1 <= \at(n, Pre))) ==> ((sn == 0) && (i == 1) && (n == \at(n, Pre)));
        loop invariant n == \at(n, Pre);
    */
    while (i <= n) {
        i = (i + 1);
        sn = (sn + 1);
    }
}


/*@ requires n >= 1;
*/
void foo(int n) {
    int i = 1;
    int sn = 0;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
        loop invariant (1 <= \at(n, Pre)) ==> (1 <= i <= n + 1);
        loop invariant (1 <= \at(n, Pre)) ==> (sn == i - 1);
        loop invariant (!(1 <= \at(n, Pre))) ==> ((sn == 0) && (i == 1) && (n == \at(n, Pre)));
        loop invariant n == \at(n, Pre);
    */
    while (i <= n) {
        i = (i + 1);
        sn = (sn + 1);
    }
}

syntax Correct
Validate:
[True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True]

Verify:
[]

/*@
        loop invariant (1 <= \at(n, Pre)) ==> (1 <= i <= n + 1);
        loop invariant (1 <= \at(n, Pre)) ==> (sn == i - 1);
        loop invariant (!(1 <= \at(n, Pre))) ==> ((sn == 0) && (i == 1) && (n == \at(n, Pre)));
        loop invariant n == \at(n, Pre);
    */
    while (i <= n) {
        i = (i + 1);
        sn = (sn + 1);
    }
转换后
/*@ Inv
    ((1 <= n@pre) => (1 <= i && i <= n + 1)) &&
((1 <= n@pre) => (sn == i - 1)) &&
((!(1 <= n@pre)) => ((sn == 0) && (i == 1) && (n == n@pre))) &&
(n == n@pre)
    */
    while (i <= n) {
        i = (i + 1);
        sn = (sn + 1);
    }
PARTIAL CORRECT INVARIANT
继续符号执行
/*@ Inv
    ((1 <= n@pre) => (1 <= i && i <= n + 1)) &&
((1 <= n@pre) => (sn == i - 1)) &&
((!(1 <= n@pre)) => ((sn == 0) && (i == 1) && (n == n@pre))) &&
(n == n@pre)
    */
    while (i <= n) {
        i = (i + 1);
        sn = (sn + 1);
    }
File found: ../sac_c_parser/test/../ip_postcond/goal/111_goal.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/111_proof_auto.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/111_proof_manual.v. Deleting the file.
LoopEntry_0:
(sn == 0) * (i == 1) * (n == n@pre)

[(0, '(sn == 0) * (i == 1) * (n == n@pre)')]
Successfully generated loop/111.json
syntax Correct
Validate:
[True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True]

Verify:
[]

已移动文件: 111.c -> finish
-----------------------------------------

文件 111.c 处理完成. 总耗时: 65.1614580154419
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
========================================
-----------------------------------------
finshed_files:['29.c', '87.c', '9.c', '107.c', '65.c', '59.c', '46.c', '60.c', '78.c', '11.c', '132.c', '70.c', '121.c', '94.c', '109.c', '61.c', '120.c', '42.c', '33.c', '17.c', '105.c', '101.c', '38.c', '40.c', '88.c', '4.c', '114.c', '8.c', '84.c', '83.c', '111.c']
