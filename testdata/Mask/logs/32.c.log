file:32.c
TRY TIME: 0
[(111, 161, 0)]
[(111, 161, 0)]
[(111, 161, 0)]
[(111, 161, 0)]
Loop 0 : Outer
Sorted indices: [0]
File not found: ../sac_c_parser/test/../ip_postcond/goal/32_goal.v. No file to delete.
File not found: ../sac_c_parser/test/../ip_postcond/goal/32_proof_auto.v. No file to delete.
File not found: ../sac_c_parser/test/../ip_postcond/goal/32_proof_manual.v. No file to delete.
LoopEntry_0:
(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)

[(0, '(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)')]
Successfully generated loop/32.json
INNER_FLAG: False
Variable Maps: [{'x': 'n@pre', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'n': 'n@pre'}]
Path conditions: [None]
Pre condition: (x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)
Loop Condition: x > 1
Updated Loop Conditions: ['n@pre > 1']
Global Unchanged Variables ['v3', 'v2', 'v1', 'n']
Non Inductive Variables []
[{'x': 'n@pre', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'n': 'n@pre'}]
[None]

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant v3 == \at(v3, Pre);
          loop invariant v2 == \at(v2, Pre);
          loop invariant v1 == \at(v1, Pre);
          loop invariant n == \at(n, Pre);
                */
                while (x > 1) {
      
       x  = x - 1;
  
    }
                

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (\at(n, Pre) > 1) ==> (PLACE_HOLDER_x);
          loop invariant (!(\at(n, Pre) > 1)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
          loop invariant v3 == \at(v3, Pre);
          loop invariant v2 == \at(v2, Pre);
          loop invariant v1 == \at(v1, Pre);
          loop invariant n == \at(n, Pre);
                */
                while (x > 1) {
      
       x  = x - 1;
  
    }
                
void foo(int n, int v1,int v2,int v3) {

    int x = n;
    
    
    
                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (\at(n, Pre) > 1) ==> (PLACE_HOLDER_x);
          loop invariant (!(\at(n, Pre) > 1)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
          loop invariant v3 == \at(v3, Pre);
          loop invariant v2 == \at(v2, Pre);
          loop invariant v1 == \at(v1, Pre);
          loop invariant n == \at(n, Pre);
                */
                while (x > 1) {
      
       x  = x - 1;
  
    }
                
   /*_auto_mask_id_0_*/
  }
```c
void foo(int n, int v1, int v2, int v3) {
    int x = n;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant (\at(n, Pre) > 1) ==> (x >= 1 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 1)) ==> ((x == \at(n, Pre)) && (v3 == \at(v3, Pre)) && (v2 == \at(v2, Pre)) && (v1 == \at(v1, Pre)) && (n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
}
```

void foo(int n, int v1, int v2, int v3) {
    int x = n;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant (\at(n, Pre) > 1) ==> (x >= 1 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 1)) ==> ((x == \at(n, Pre)) && (v3 == \at(v3, Pre)) && (v2 == \at(v2, Pre)) && (v1 == \at(v1, Pre)) && (n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
}


void foo(int n, int v1, int v2, int v3) {
    int x = n;

    /* >>> LOOP INVARIANT TO FILL <<< */
    /*@
      loop invariant (\at(n, Pre) > 1) ==> (x >= 1 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 1)) ==> ((x == \at(n, Pre)) && (v3 == \at(v3, Pre)) && (v2 == \at(v2, Pre)) && (v1 == \at(v1, Pre)) && (n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
}

syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

/*@
      loop invariant (\at(n, Pre) > 1) ==> (x >= 1 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 1)) ==> ((x == \at(n, Pre)) && (v3 == \at(v3, Pre)) && (v2 == \at(v2, Pre)) && (v1 == \at(v1, Pre)) && (n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 1) {
        x = x - 1;
    }
转换后
/*@ Inv
    ((n@pre > 1) => (x >= 1 && x <= n@pre)) &&
((!(n@pre > 1)) => ((x == n@pre) && (v3 == v3@pre) && (v2 == v2@pre) && (v1 == v1@pre) && (n == n@pre))) &&
(v3 == v3@pre) &&
(v2 == v2@pre) &&
(v1 == v1@pre) &&
(n == n@pre)
    */
    while (x > 1) {
        x = x - 1;
    }
PARTIAL CORRECT INVARIANT
继续符号执行
/*@ Inv
    ((n@pre > 1) => (x >= 1 && x <= n@pre)) &&
((!(n@pre > 1)) => ((x == n@pre) && (v3 == v3@pre) && (v2 == v2@pre) && (v1 == v1@pre) && (n == n@pre))) &&
(v3 == v3@pre) &&
(v2 == v2@pre) &&
(v1 == v1@pre) &&
(n == n@pre)
    */
    while (x > 1) {
        x = x - 1;
    }
File found: ../sac_c_parser/test/../ip_postcond/goal/32_goal.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/32_proof_auto.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/32_proof_manual.v. Deleting the file.
LoopEntry_0:
(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)

[(0, '(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)')]
Successfully generated loop/32.json
syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

已移动文件: 32.c -> finish
-----------------------------------------

文件 32.c 处理完成. 总耗时: 64.97011399269104
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
  - 131.c
  - 90.c
  - 86.c
  - 129.c
  - 130.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
  - 131.c
  - 90.c
  - 86.c
  - 129.c
  - 130.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
  - 131.c
  - 90.c
  - 86.c
  - 129.c
  - 130.c
========================================
-----------------------------------------
finshed_files:['29.c', '87.c', '9.c', '107.c', '65.c', '59.c', '46.c', '60.c', '78.c', '11.c', '132.c', '70.c', '121.c', '94.c', '109.c', '61.c', '120.c', '42.c', '33.c', '17.c', '105.c', '101.c', '38.c', '40.c', '88.c', '4.c', '114.c', '8.c', '84.c', '83.c', '111.c', '47.c', '14.c', '49.c', '131.c', '119.c', '43.c', '50.c', '56.c', '18.c', '53.c', '35.c', '10.c', '28.c', '26.c', '73.c', '89.c', '126.c', '96.c', '57.c', '37.c', '36.c', '92.c', '68.c', '115.c', '71.c', '91.c', '22.c', '19.c', '124.c', '52.c', '100.c', '95.c', '90.c', '86.c', '128.c', '62.c', '77.c', '79.c', '108.c', '129.c', '34.c', '123.c', '98.c', '41.c', '27.c', '106.c', '58.c', '130.c', '20.c', '85.c', '15.c', '75.c', '104.c', '2.c', '82.c', '32.c']
