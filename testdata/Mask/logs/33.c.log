file:33.c
TRY TIME: 0
[(110, 160, 0)]
[(110, 160, 0)]
[(110, 160, 0)]
[(110, 160, 0)]
Loop 0 : Outer
Sorted indices: [0]
File found: ../sac_c_parser/test/../ip_postcond/goal/33_goal.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/33_proof_auto.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/33_proof_manual.v. Deleting the file.
LoopEntry_0:
(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)

[(0, '(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)')]
Successfully generated loop/33.json
INNER_FLAG: False
Variable Maps: [{'x': 'n@pre', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'n': 'n@pre'}]
Path conditions: [None]
Pre condition: (x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)
Loop Condition: x > 0
Updated Loop Conditions: ['n@pre > 0']
Global Unchanged Variables ['v3', 'v2', 'v1', 'n']
Non Inductive Variables []
[{'x': 'n@pre', 'v3': 'v3@pre', 'v2': 'v2@pre', 'v1': 'v1@pre', 'n': 'n@pre'}]
[None]

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant v3 == \at(v3, Pre);
          loop invariant v2 == \at(v2, Pre);
          loop invariant v1 == \at(v1, Pre);
          loop invariant n == \at(n, Pre);
                */
                while (x > 0) {
      
       x  = x - 1;
  
    }
                

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (\at(n, Pre) > 0) ==> (PLACE_HOLDER_x);
          loop invariant (!(\at(n, Pre) > 0)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
          loop invariant v3 == \at(v3, Pre);
          loop invariant v2 == \at(v2, Pre);
          loop invariant v1 == \at(v1, Pre);
          loop invariant n == \at(n, Pre);
                */
                while (x > 0) {
      
       x  = x - 1;
  
    }
                
void foo(int n,int v1,int v2,int v3) {

    int x = n;
    
    
    
                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (\at(n, Pre) > 0) ==> (PLACE_HOLDER_x);
          loop invariant (!(\at(n, Pre) > 0)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
          loop invariant v3 == \at(v3, Pre);
          loop invariant v2 == \at(v2, Pre);
          loop invariant v1 == \at(v1, Pre);
          loop invariant n == \at(n, Pre);
                */
                while (x > 0) {
      
       x  = x - 1;
  
    }
                
  
   /*_auto_mask_id_0_*/
  }
```c
void foo(int n, int v1, int v2, int v3) {

    int x = n;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant (\at(n, Pre) > 0) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 0)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 0) {
        x = x - 1;
    }
}
```

void foo(int n, int v1, int v2, int v3) {

    int x = n;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant (\at(n, Pre) > 0) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 0)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 0) {
        x = x - 1;
    }
}


void foo(int n, int v1, int v2, int v3) {

    int x = n;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
    
    /*@
      loop invariant (\at(n, Pre) > 0) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 0)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 0) {
        x = x - 1;
    }
}

syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

/*@
      loop invariant (\at(n, Pre) > 0) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(\at(n, Pre) > 0)) ==> ((x == \at(n, Pre))&&(v3 == \at(v3, Pre))&&(v2 == \at(v2, Pre))&&(v1 == \at(v1, Pre))&&(n == \at(n, Pre)));
      loop invariant v3 == \at(v3, Pre);
      loop invariant v2 == \at(v2, Pre);
      loop invariant v1 == \at(v1, Pre);
      loop invariant n == \at(n, Pre);
    */
    while (x > 0) {
        x = x - 1;
    }
转换后
/*@ Inv
    ((n@pre > 0) => (x >= 0 && x <= n@pre)) &&
((!(n@pre > 0)) => ((x == n@pre)&&(v3 == v3@pre)&&(v2 == v2@pre)&&(v1 == v1@pre)&&(n == n@pre))) &&
(v3 == v3@pre) &&
(v2 == v2@pre) &&
(v1 == v1@pre) &&
(n == n@pre)
    */
    while (x > 0) {
        x = x - 1;
    }
PARTIAL CORRECT INVARIANT
继续符号执行
/*@ Inv
    ((n@pre > 0) => (x >= 0 && x <= n@pre)) &&
((!(n@pre > 0)) => ((x == n@pre)&&(v3 == v3@pre)&&(v2 == v2@pre)&&(v1 == v1@pre)&&(n == n@pre))) &&
(v3 == v3@pre) &&
(v2 == v2@pre) &&
(v1 == v1@pre) &&
(n == n@pre)
    */
    while (x > 0) {
        x = x - 1;
    }
File found: ../sac_c_parser/test/../ip_postcond/goal/33_goal.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/33_proof_auto.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/33_proof_manual.v. Deleting the file.
LoopEntry_0:
(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)

[(0, '(x == n@pre) * (v3 == v3@pre) * (v2 == v2@pre) * (v1 == v1@pre) * (n == n@pre)')]
Successfully generated loop/33.json
syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True, True, True]

Verify:
[]

已移动文件: 33.c -> finish
-----------------------------------------

文件 33.c 处理完成. 总耗时: 65.31566977500916
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
========================================
-----------------------------------------
finshed_files:['29.c', '87.c', '9.c', '107.c', '65.c', '59.c', '46.c', '60.c', '78.c', '11.c', '132.c', '70.c', '121.c', '94.c', '109.c', '61.c', '120.c', '42.c', '33.c']
