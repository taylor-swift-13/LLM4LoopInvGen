file:98.c
TRY TIME: 0
[(115, 183, 0)]
[(115, 183, 0)]
[(115, 183, 0)]
[(115, 183, 0)]
Loop 0 : Outer
Sorted indices: [0]
File not found: ../sac_c_parser/test/../ip_postcond/goal/98_goal.v. No file to delete.
File not found: ../sac_c_parser/test/../ip_postcond/goal/98_proof_auto.v. No file to delete.
File not found: ../sac_c_parser/test/../ip_postcond/goal/98_proof_manual.v. No file to delete.
LoopEntry_0:
(y == 2) * (j == 0) * (i == 0) * (x == x@pre)

[(0, '(y == 2) * (j == 0) * (i == 0) * (x == x@pre)')]
Successfully generated loop/98.json
INNER_FLAG: False
Variable Maps: [{'y': '2', 'j': '0', 'i': '0', 'x': 'x@pre'}]
Path conditions: [None]
Pre condition: (y == 2) * (j == 0) * (i == 0) * (x == x@pre)
Loop Condition: i <= x
Updated Loop Conditions: ['0 <= x@pre']
Global Unchanged Variables ['y', 'x']
Non Inductive Variables []
[{'y': '2', 'j': '0', 'i': '0', 'x': 'x@pre'}]
[None]

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant y == 2;
          loop invariant x == \at(x, Pre);
                */
                while (i <= x) {
      
      i  = i + 1;
      j  = j + y;
  
    }
                

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (0 <= \at(x, Pre)) ==> (PLACE_HOLDER_i);
          loop invariant (0 <= \at(x, Pre)) ==> (PLACE_HOLDER_j);
          loop invariant (!(0 <= \at(x, Pre))) ==> ((y == 2)&&(j == 0)&&(i == 0)&&(x == \at(x, Pre)));
          loop invariant y == 2;
          loop invariant x == \at(x, Pre);
                */
                while (i <= x) {
      
      i  = i + 1;
      j  = j + y;
  
    }
                
void foo(int x) {
    int i =0;
    int j =0;
    int y =2;
    
    
    
                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (0 <= \at(x, Pre)) ==> (PLACE_HOLDER_i);
          loop invariant (0 <= \at(x, Pre)) ==> (PLACE_HOLDER_j);
          loop invariant (!(0 <= \at(x, Pre))) ==> ((y == 2)&&(j == 0)&&(i == 0)&&(x == \at(x, Pre)));
          loop invariant y == 2;
          loop invariant x == \at(x, Pre);
                */
                while (i <= x) {
      
      i  = i + 1;
      j  = j + y;
  
    }
                
  
  /*_auto_mask_id_0_*/
  
  }
```c
void foo(int x) {
    int i = 0;
    int j = 0;
    int y = 2;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant (0 <= \at(x, Pre)) ==> (0 <= i <= x + 1);
      loop invariant (0 <= \at(x, Pre)) ==> (j == i * y);
      loop invariant (!(0 <= \at(x, Pre))) ==> ((y == 2)&&(j == 0)&&(i == 0)&&(x == \at(x, Pre)));
      loop invariant y == 2;
      loop invariant x == \at(x, Pre);
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
}
```

void foo(int x) {
    int i = 0;
    int j = 0;
    int y = 2;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant (0 <= \at(x, Pre)) ==> (0 <= i <= x + 1);
      loop invariant (0 <= \at(x, Pre)) ==> (j == i * y);
      loop invariant (!(0 <= \at(x, Pre))) ==> ((y == 2)&&(j == 0)&&(i == 0)&&(x == \at(x, Pre)));
      loop invariant y == 2;
      loop invariant x == \at(x, Pre);
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
}


void foo(int x) {
    int i = 0;
    int j = 0;
    int y = 2;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant (0 <= \at(x, Pre)) ==> (0 <= i <= x + 1);
      loop invariant (0 <= \at(x, Pre)) ==> (j == i * y);
      loop invariant (!(0 <= \at(x, Pre))) ==> ((y == 2)&&(j == 0)&&(i == 0)&&(x == \at(x, Pre)));
      loop invariant y == 2;
      loop invariant x == \at(x, Pre);
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
}

syntax Correct
Validate:
[True, True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True, True]

Verify:
[]

/*@
      loop invariant (0 <= \at(x, Pre)) ==> (0 <= i <= x + 1);
      loop invariant (0 <= \at(x, Pre)) ==> (j == i * y);
      loop invariant (!(0 <= \at(x, Pre))) ==> ((y == 2)&&(j == 0)&&(i == 0)&&(x == \at(x, Pre)));
      loop invariant y == 2;
      loop invariant x == \at(x, Pre);
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
转换后
/*@ Inv
    ((0 <= x@pre) => (0 <= i && i <= x + 1)) &&
((0 <= x@pre) => (j == i * y)) &&
((!(0 <= x@pre)) => ((y == 2)&&(j == 0)&&(i == 0)&&(x == x@pre))) &&
(y == 2) &&
(x == x@pre)
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
PARTIAL CORRECT INVARIANT
继续符号执行
/*@ Inv
    ((0 <= x@pre) => (0 <= i && i <= x + 1)) &&
((0 <= x@pre) => (j == i * y)) &&
((!(0 <= x@pre)) => ((y == 2)&&(j == 0)&&(i == 0)&&(x == x@pre))) &&
(y == 2) &&
(x == x@pre)
    */
    while (i <= x) {
        i = i + 1;
        j = j + y;
    }
File found: ../sac_c_parser/test/../ip_postcond/goal/98_goal.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/98_proof_auto.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/98_proof_manual.v. Deleting the file.
LoopEntry_0:
(y == 2) * (j == 0) * (i == 0) * (x == x@pre)

[(0, '(y == 2) * (j == 0) * (i == 0) * (x == x@pre)')]
Successfully generated loop/98.json
syntax Correct
Validate:
[True, True, True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True, True, True]

Verify:
[]

已移动文件: 98.c -> finish
-----------------------------------------

文件 98.c 处理完成. 总耗时: 63.95776891708374
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
  - 131.c
  - 90.c
  - 86.c
  - 129.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
  - 131.c
  - 90.c
  - 86.c
  - 129.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
  - 88.c
  - 4.c
  - 84.c
  - 83.c
  - 131.c
  - 90.c
  - 86.c
  - 129.c
========================================
-----------------------------------------
finshed_files:['29.c', '87.c', '9.c', '107.c', '65.c', '59.c', '46.c', '60.c', '78.c', '11.c', '132.c', '70.c', '121.c', '94.c', '109.c', '61.c', '120.c', '42.c', '33.c', '17.c', '105.c', '101.c', '38.c', '40.c', '88.c', '4.c', '114.c', '8.c', '84.c', '83.c', '111.c', '47.c', '14.c', '49.c', '131.c', '119.c', '43.c', '50.c', '56.c', '18.c', '53.c', '35.c', '10.c', '28.c', '26.c', '73.c', '89.c', '126.c', '96.c', '57.c', '37.c', '36.c', '92.c', '68.c', '115.c', '71.c', '91.c', '22.c', '19.c', '124.c', '52.c', '100.c', '95.c', '90.c', '86.c', '128.c', '62.c', '77.c', '79.c', '108.c', '129.c', '34.c', '123.c', '98.c']
