file:101.c
TRY TIME: 0
[(92, 147, 0)]
[(92, 147, 0)]
[(92, 147, 0)]
[(92, 147, 0)]
Loop 0 : Outer
Sorted indices: [0]
File found: ../sac_c_parser/test/../ip_postcond/goal/101_goal.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/101_proof_auto.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/101_proof_manual.v. Deleting the file.
LoopEntry_0:
(x == 0) * (n == n@pre)

[(0, '(x == 0) * (n == n@pre)')]
Successfully generated loop/101.json
INNER_FLAG: False
Variable Maps: [{'x': '0', 'n': 'n@pre'}]
Path conditions: [None]
Pre condition: (x == 0) * (n == n@pre)
Loop Condition: x < n
Updated Loop Conditions: ['0 < n@pre']
Global Unchanged Variables ['n']
Non Inductive Variables []
[{'x': '0', 'n': 'n@pre'}]
[None]

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant n == \at(n, Pre);
                */
                while (x < n) {
      
      x  = (x + 1);
      
    }
                

                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (0 < \at(n, Pre)) ==> (PLACE_HOLDER_x);
          loop invariant (!(0 < \at(n, Pre))) ==> ((x == 0)&&(n == \at(n, Pre)));
          loop invariant n == \at(n, Pre);
                */
                while (x < n) {
      
      x  = (x + 1);
      
    }
                

void foo(int n) {
  
    int x = 0;
    
    
    
                
        /* >>> LOOP INVARIANT TO FILL <<< */
        
                /*@
          loop invariant (0 < \at(n, Pre)) ==> (PLACE_HOLDER_x);
          loop invariant (!(0 < \at(n, Pre))) ==> ((x == 0)&&(n == \at(n, Pre)));
          loop invariant n == \at(n, Pre);
                */
                while (x < n) {
      
      x  = (x + 1);
      
    }
                
    /*_auto_mask_id_0_*/
    
  }
```c
void foo(int n) {
  
    int x = 0;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant (0 < \at(n, Pre)) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(0 < \at(n, Pre))) ==> ((x == 0)&&(n == \at(n, Pre)));
      loop invariant n == \at(n, Pre);
    */
    while (x < n) {
      
      x  = (x + 1);
      
    }
                
    /*_auto_mask_id_0_*/
    
  }
```

void foo(int n) {
  
    int x = 0;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant (0 < \at(n, Pre)) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(0 < \at(n, Pre))) ==> ((x == 0)&&(n == \at(n, Pre)));
      loop invariant n == \at(n, Pre);
    */
    while (x < n) {
      
      x  = (x + 1);
      
    }
                
    /*_auto_mask_id_0_*/
    
  }


void foo(int n) {
  
    int x = 0;
    
    /* >>> LOOP INVARIANT TO FILL <<< */
        
    /*@
      loop invariant (0 < \at(n, Pre)) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(0 < \at(n, Pre))) ==> ((x == 0)&&(n == \at(n, Pre)));
      loop invariant n == \at(n, Pre);
    */
    while (x < n) {
      
      x  = (x + 1);
      
    }
                
    /*_auto_mask_id_0_*/
    
  }

syntax Correct
Validate:
[True, True, True]

Verify:
[]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True]

Verify:
[]

/*@
      loop invariant (0 < \at(n, Pre)) ==> (x >= 0 && x <= \at(n, Pre));
      loop invariant (!(0 < \at(n, Pre))) ==> ((x == 0)&&(n == \at(n, Pre)));
      loop invariant n == \at(n, Pre);
    */
    while (x < n) {
      
      x  = (x + 1);
      
    }
转换后
/*@ Inv
    ((0 < n@pre) => (x >= 0 && x <= n@pre)) &&
((!(0 < n@pre)) => ((x == 0)&&(n == n@pre))) &&
(n == n@pre)
    */
    while (x < n) {
      
      x  = (x + 1);
      
    }
PARTIAL CORRECT INVARIANT
继续符号执行
/*@ Inv
    ((0 < n@pre) => (x >= 0 && x <= n@pre)) &&
((!(0 < n@pre)) => ((x == 0)&&(n == n@pre))) &&
(n == n@pre)
    */
    while (x < n) {
      
      x  = (x + 1);
      
    }
File found: ../sac_c_parser/test/../ip_postcond/goal/101_goal.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/101_proof_auto.v. Deleting the file.
File found: ../sac_c_parser/test/../ip_postcond/goal/101_proof_manual.v. Deleting the file.
LoopEntry_0:
(x == 0) * (n == n@pre)

[(0, '(x == 0) * (n == n@pre)')]
Successfully generated loop/101.json
syntax Correct
Validate:
[True, True, True]

Verify:
[True]

CORRECT INVARIANT
syntax Correct
Validate:
[True, True, True]

Verify:
[True]

已移动文件: 101.c -> finish
-----------------------------------------

文件 101.c 处理完成. 总耗时: 65.00285696983337
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
========================================
错误的文件名:
  - 65.c
  - 132.c
  - 70.c
  - 94.c
========================================
-----------------------------------------
finshed_files:['29.c', '87.c', '9.c', '107.c', '65.c', '59.c', '46.c', '60.c', '78.c', '11.c', '132.c', '70.c', '121.c', '94.c', '109.c', '61.c', '120.c', '42.c', '33.c', '17.c', '105.c', '101.c']
