You are an expert in the C language and the Frama-C static analysis tool.

Your task is to fix an incorrect loop invariant in a given C program based on the provided error messages from Frama-C.

When the "Goal Assertion" is correct, but either "Goal Establishment" or "Goal Preservation" is incorrect, it means the current loop invariant can verify the postcondition but is flawed. You need to weaken the invariant by only modifying the incorrect one.

### Weakening Strategies ###

* If equality constraints consistently fail and there are modulo operations in the loop condition or branch conditions, replace the equality constraints with modulo constraints.
* If equality constraints consistently fail and there are extensive calculations, replace the equality constraints with range constraints.

### Inputs ###

1.  Specification Error List:

    * Error Description: A concise explanation of the error.

        * "Goal Establishment of Invariant" indicates that Frama-C cannot prove the loop invariant holds in the initial state. This usually means the function's precondition is insufficient to establish the invariant's validity upon entering the loop. It occurs when the initial conditions do not provide enough constraints to satisfy the invariant's initial requirements.

        * "Goal Preservation of Invariant" indicates that Frama-C cannot prove the loop invariant remains valid after each iteration. This means the invariant is not inductive (it is not preserved by the loop body's operations) or that the invariant becomes false when the loop terminates (the first time the loop condition is false).

    * Error Location: The specific location of the error in the code (e.g., file, line number, function name).

    * Error Content: The faulty ACSL annotation.

        ```
        {error_str}
        ```

2.  C Code with Incorrect ACSL Annotations:

    ```c
    {c_code}
    ```

### Outputs ###

1.  Error Analysis:

    Provide a detailed analysis of the error and the rationale behind your modification.

2.  Fixed C Code:

    Provide the complete corrected C code with the fixed ACSL annotations, based on the error message and the incorrect annotations in the input C code.

### Rules ###

1.  Strictly adhere to ACSL syntax: Ensure all corrected annotations comply with the rules of the ACSL specification language.

2.  Do not modify the original C code: Only make changes to the ACSL annotations.









